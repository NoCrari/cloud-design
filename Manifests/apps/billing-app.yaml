apiVersion: v1
kind: Service
metadata:
  name: billing-app
  namespace: microservices
spec:
  selector:
    app: billing-app
  ports:
    - port: 8080
      targetPort: 8080
  clusterIP: None  # Headless service for StatefulSet
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: billing-app
  namespace: microservices
spec:
  serviceName: billing-app
  replicas: 1
  selector:
    matchLabels:
      app: billing-app
  template:
    metadata:
      labels:
        app: billing-app
    spec:
      initContainers:
        - name: wait-for-deps
          image: busybox:1.36
          imagePullPolicy: IfNotPresent
          env:
            - name: BILLING_DB_HOST
              value: "billing-db.microservices.svc.cluster.local"
            - name: BILLING_DB_PORT
              value: "5432"
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RABBITMQ_HOST
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RABBITMQ_PORT
          command:
            - sh
            - -lc
            - |
              set -eu
              DB_HOST="${BILLING_DB_HOST:-billing-db}"
              DB_PORT="${BILLING_DB_PORT:-5432}"
              MQ_HOST="${RABBITMQ_HOST:-rabbitmq}"
              MQ_PORT="${RABBITMQ_PORT:-5672}"
              echo "Waiting for dependencies: ${DB_HOST}:${DB_PORT} and ${MQ_HOST}:${MQ_PORT} ..."
              for i in $(seq 1 120); do
                db_dns_ok=false
                mq_dns_ok=false
                nslookup "${DB_HOST}" >/dev/null 2>&1 && db_dns_ok=true || true
                nslookup "${MQ_HOST}" >/dev/null 2>&1 && mq_dns_ok=true || true

                db_tcp_ok=false
                mq_tcp_ok=false
                nc -z -w 2 "${DB_HOST}" "${DB_PORT}" >/dev/null 2>&1 && db_tcp_ok=true || true
                nc -z -w 2 "${MQ_HOST}" "${MQ_PORT}" >/dev/null 2>&1 && mq_tcp_ok=true || true

                if [ "$db_tcp_ok" = true ] && [ "$mq_tcp_ok" = true ]; then
                  echo "All dependencies reachable."
                  exit 0
                fi
                echo "Attempt $i: db(dns=$db_dns_ok,tcp=$db_tcp_ok) mq(dns=$mq_dns_ok,tcp=$mq_tcp_ok) â€” not ready yet"; sleep 5
              done
              echo "Timed out waiting for dependencies"; exit 1
          resources:
            requests:
              cpu: "10m"
              memory: "16Mi"
            limits:
              cpu: "50m"
              memory: "64Mi"
      containers:
        - name: billing-app
          image: nocrarii/billing-app:v10
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: BILLING_DB_USER
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: postgres-user
            - name: BILLING_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secrets
                  key: postgres-password
            - name: BILLING_DB_NAME
              value: "billing"
            - name: BILLING_DB_HOST
              value: "billing-db.microservices.svc.cluster.local"
            - name: BILLING_DB_PORT
              value: "5432"
            - name: RABBITMQ_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RABBITMQ_HOST
            - name: RABBITMQ_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-config
                  key: RABBITMQ_PORT
            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secrets
                  key: rabbitmq-user
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rabbitmq-secrets
                  key: rabbitmq-password
            - name: RABBITMQ_QUEUE
              value: "billing_queue"
          resources:
            requests:
              cpu: "100m"
              memory: "128Mi"
            limits:
              cpu: "200m"
              memory: "256Mi"
